# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
#  push:
#    branches: [ "develop" ]
#  pull_request:
#    branches: [ "develop" ]
#  release:
#    types: [ published ]

jobs:

  deploy-lambda:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'
      
    - name: Test
      run: go test -v ./...
    
    - name: Build
      run: GOOS=linux go build -o main

    - name: Zip
      run: zip main.zip main

  deploy-aws:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_REGION }}
        client_id: ${{ secrets.COG_CLIENT_ID }}
        zip_file: main.zip
        dry_run: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -var 'access_key=${{ secrets.AWS_ACCESS_KEY_ID }}' -var 'secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -var 'account_id=${{ secrets.COG_CLIENT_ID }}'

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -var 'access_key=${{ secrets.AWS_ACCESS_KEY_ID }}' -var 'secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}' -var 'account_id=${{ secrets.COG_CLIENT_ID }}'

#    - name: AWS Lambda Deploy
#      uses: appleboy/lambda-action@v0.1.9
#      with:
#        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        aws_region: ${{ secrets.AWS_REGION }}
#        function_name: test-go
#        zip_file: main.zip
#        dry_run: true

      
            
